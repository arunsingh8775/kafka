name: Kafka + Postgres Infra (simple run)

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

jobs:
  kafka:
    runs-on: ubuntu-latest
    steps:
      - name: Run Kafka (KRaft mode) on VM
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: opc
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            # Install Docker if missing
            if ! command -v docker >/dev/null 2>&1; then
              curl -fsSL https://get.docker.com | sh
              sudo systemctl enable --now docker
            fi

            mkdir -p ~/kafka && cd ~/kafka
            PUB_IP=$(curl -s ifconfig.me || echo "127.0.0.1")

            # Write docker-compose.yml for Kafka
            printf '%s\n' \
              'version: "3.8"' \
              'services:' \
              '  kafka:' \
              '    image: bitnami/kafka:3.7' \
              '    container_name: kafka' \
              '    ports:' \
              '      - "9092:9092"' \
              '    environment:' \
              '      - ALLOW_PLAINTEXT_LISTENER=yes' \
              '      - KAFKA_ENABLE_KRAFT=yes' \
              '      - KAFKA_CFG_PROCESS_ROLES=broker,controller' \
              '      - KAFKA_CFG_NODE_ID=1' \
              '      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093' \
              '      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093' \
              '      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT' \
              '      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER' \
              "      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://${PUB_IP}:9092" \
              '      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true' \
              > docker-compose.yml

            # Start Kafka
            sudo docker compose -f docker-compose.yml up -d

  postgres:
    runs-on: ubuntu-latest
    steps:
      - name: Run Postgres on VM
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: opc
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            # Install Docker if missing
            if ! command -v docker >/dev/null 2>&1; then
              curl -fsSL https://get.docker.com | sh
              sudo systemctl enable --now docker
            fi

            mkdir -p ~/postgres && cd ~/postgres

            # Write docker-compose.yml for Postgres
            printf '%s\n' \
              'version: "3.8"' \
              'services:' \
              '  postgres:' \
              '    image: postgres:16-alpine' \
              '    container_name: postgres' \
              '    restart: unless-stopped' \
              '    ports:' \
              '      - "5432:5432"' \
              '    environment:' \
              '      - POSTGRES_USER=postgres' \
              '      - POSTGRES_PASSWORD=postgres' \
              '      - POSTGRES_DB=order_management_db' \
              '    volumes:' \
              '      - pgdata:/var/lib/postgresql/data' \
              'volumes:' \
              '  pgdata:' \
              > docker-compose.yml

            # Start Postgres
            sudo docker compose -f docker-compose.yml up -d
